<?xml version="1.0" encoding="UTF-8"?>  
<beans:beans xmlns="http://www.springframework.org/schema/security"  
    xmlns:b="http://www.springframework.org/schema/beans"   
    xmlns:beans="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
                        http://www.springframework.org/schema/security   
                        http://www.springframework.org/schema/security/spring-security-3.2.xsd">  
      
	<!-- 实现自定义登录过滤器 -->
      
   	<!-- access-denied-page设置权限被拒绝后的跳转页面 -->
    <http entry-point-ref="loginEntryPoint" access-denied-page="/intercept.do">
        
        <!-- invalidate-session="true"表示开启session失效功能 -->
        <logout logout-success-url="/login.do" logout-url="/logout.do"/>
        
        <!-- 自定义登录过滤器 -->
        <custom-filter ref="myLoginFilter" position="FORM_LOGIN_FILTER"/>
        
        <!-- 增加一个自定义filter，这个filter位于FILTER_SECURITY_INTERCEPTOR之前  -->
        <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR" />
    </http>
       
 	<beans:bean id="loginEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<!-- 默认登录页的url -->
		<beans:constructor-arg value="/login.do" />
	</beans:bean>
	
	<!-- 自定义登录过滤器 -->
   	<beans:bean id="myLoginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="authenticationSuccessHandler" ref="myLoginSuccessHandler" />
		<beans:property name="authenticationFailureHandler" ref="myLoginFailHandler" />
	</beans:bean>

    <!-- 登录成功处理 -->
    <beans:bean id="myLoginSuccessHandler" class="com.demo.security.myFilter.MyLoginSuccessHandler">
    	<beans:property name="defaultTargetUrl"  value="/loginSuccess.do" ></beans:property>
    </beans:bean>

    <!-- 登录失败处理 -->
    <beans:bean id="myLoginFailHandler" class="com.demo.security.myFilter.MyLoginFailHandler">
    	<beans:property name="defaultFailureUrl"  value="/loginFail.do" ></beans:property>
    	<beans:property name="useForward"  value="true" ></beans:property>
    </beans:bean>
    
    <!-- 自定义过滤器 -->
    <beans:bean id="myFilter" class="com.demo.security.myFilter.MyFilterSecurityInterceptor">
    	<beans:property name="authenticationManager" ref="authenticationManager"/>
    	<beans:property name="accessDecisionManager" ref="myAccessDecisionManager"/>
    	<beans:property name="securityMetadataSource" ref="mySecurityMetadataSource"/>
    </beans:bean>
    
    <!-- 自定义Service实现认证管理 -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="myUserDetailService" />
    </authentication-manager>
    <beans:bean id="myUserDetailService" class="com.demo.security.myFilter.MyUserDetailService" />
    
    <!-- 自定义资源数据，定义访问的资源属于哪些权限 -->
    <beans:bean id="mySecurityMetadataSource" class="com.demo.security.myFilter.MySecurityMetadataSource"/>
    
    <!-- 自定义决策器，最终决定该角色是否有权限访问该资源 -->
    <beans:bean id="myAccessDecisionManager" class="com.demo.security.myFilter.MyAccessDecisionManager"/>
    
</beans:beans>